#!/bin/bash

set -e

install_go()
{
    # Taken from Google/golang Dockerfile...
    apt-get update -y && apt-get install --no-install-recommends -y -q curl build-essential \
        ca-certificates git mercurial bzr
    mkdir /goroot && curl https://storage.googleapis.com/golang/go1.3.1.linux-amd64.tar.gz | tar xvzf - -C /goroot --strip-components=1
    echo $PWD
    echo "export GOROOT=\"/goroot\"" > ./build/bootstrap.envs
    echo "export PATH=\"$PATH:/goroot/bin\"" >> ./build/bootstrap.envs
}

build_devmapper()
{
    git clone -b v2_02_103 https://git.fedorahosted.org/git/lvm2.git /usr/local/lvm2
    # see https://git.fedorahosted.org/cgit/lvm2.git/refs/tags for release tags

    # Compile and install lvm2
    cd /usr/local/lvm2 \
	&& ./configure --enable-static_link \
	&& make device-mapper \
	&& make install_device-mapper
}

install_pytest()
{
    if [ ! $(command -v pip) ]; then
        echo "Installing pip..."
        wget https://bootstrap.pypa.io/get-pip.py -O /tmp/get-pip.py
        python /tmp/get-pip.py
    fi
    pip install pytest
}

install_pdata_tools()
{
   wget https://github.com/rancher/thin-provisioning-tools/releases/download/convoy-v0.2.1/convoy-pdata_tools \
        -O /usr/local/bin/convoy-pdata_tools
   chmod a+x /usr/local/bin/convoy-pdata_tools
}

mkdir -p ./build

if [ ! $(command -v go) ]; then
    echo "Going to try installing Go..."
    install_go
fi

if [ ! -d "/usr/local/lvm2" ]; then
    echo "Going to build static libdevmapper..."
    build_devmapper
fi

if [ ! $(command -v py.test) ]; then
    echo "Installing py.test..."
    install_pytest
fi

if [ ! $(command -v convoy-pdata_tools) ]; then
    echo "Installing convoy-pdata_tools..."
    install_pdata_tools
fi

apt-get update
apt-get install -y uuid-runtime
